package com.zods.mqtt.sever.business.constant;
import com.alibaba.fastjson.JSONObject;
import com.zods.mqtt.sever.protocol.common.util.HexStringUtils;
import org.apache.commons.lang3.ArrayUtils;
import java.io.Serializable;
import java.nio.charset.Charset;
/**
 * @author jianglong
 * @description 明文密文加密常量
 * @create 2019-09-29
 **/
public class EncryPlainCipherTextDicConstant implements Serializable {

    /**
     * 明文字典
     */
    private static final short[] plainTextDictionary = {
            0x34, 0x2A, 0x6C, 0x27, 0x53, 0x65, 0x5B,
            0x52, 0x29, 0x60, 0x24, 0x1B, 0x28, 0x25,
            0x58, 0x16, 0x3F, 0x7F, 0x6B, 0x56, 0x2B,
            0x2E, 0x59, 0x42, 0x39, 0x3B, 0x36, 0x11,
            0x6D, 0x75, 0x55, 0x3E, 0x69, 0x10, 0x68,
            0x4B, 0x51, 0x30, 0x61, 0x7D, 0x66, 0x3A,
            0x57, 0x7A, 0x41, 0x1E, 0x13, 0x12, 0x3C,
            0x37, 0x5C, 0x74, 0x0E, 0x4C, 0x6F, 0x44,
            0x70, 0x40, 0x5F, 0x33, 0x79, 0x2D, 0x32,
            0x21, 0x76, 0x43, 0x5E, 0x20, 0x4A, 0x7C,
            0x6E, 0x26, 0x14, 0x71, 0x35, 0x7E, 0x67,
            0x78, 0x1D, 0x1C, 0x72, 0x0F, 0x62, 0x4D,
            0x50, 0x19, 0x18, 0x45, 0x5A, 0x63, 0x38,
            0x1F, 0x73, 0x6A, 0x31, 0x1A, 0x22, 0x64,
            0x47, 0x46, 0x4E, 0x23, 0x5D, 0x4F, 0x7B,
            0x3D, 0x77, 0x54, 0x49, 0x17, 0x15, 0x48,
            0x2C, 0x2F, 0x00
    };

    /**
     * 密文字典
     */
    private static final short[] ciphertextDictionary = {
            0x3B, 0x1B, 0x64, 0x6D, 0x72, 0x7C, 0x27,
            0x71, 0x6C, 0x40, 0x63, 0x4B, 0x0F, 0x11,
            0x76, 0x60, 0x5B, 0x39, 0x6E, 0x36, 0x25,
            0x66, 0x50, 0x69, 0x42, 0x51, 0x74, 0x4D,
            0x18, 0x41, 0x46, 0x52, 0x7D, 0x48, 0x43,
            0x19, 0x4F, 0x21, 0x2E, 0x61, 0x7E, 0x1E,
            0x56, 0x3E, 0x65, 0x24, 0x13, 0x17, 0x20,
            0x38, 0x67, 0x32, 0x70, 0x2C, 0x5A, 0x47,
            0x23, 0x44, 0x5F, 0x5D, 0x58, 0x4A, 0x57,
            0x1D, 0x15, 0x28, 0x75, 0x59, 0x6A, 0x4E,
            0x78, 0x10, 0x7A, 0x16, 0x29, 0x77, 0x26,
            0x34, 0x2D, 0x54, 0x35, 0x33, 0x31, 0x1F,
            0x2A, 0x1A, 0x6F, 0x5C, 0x3A, 0x3D, 0x22,
            0x45, 0x0E, 0x37, 0x7B, 0x6B, 0x79, 0x55,
            0x2F, 0x3F, 0x3C, 0x62, 0x14, 0x49, 0x7F,
            0x2B, 0x68, 0x30, 0x4C, 0x73, 0x5E, 0x53,
            0x12, 0x1C, 0x00
    };

    /**
     * 根据明文加密
     */
    public static final String encryptCipherTextToString(byte[] bytes) {
        StringBuffer buffer = new StringBuffer();
        String hexString = HexStringUtils.parseByte2HexStr(bytes);
        System.out.println(hexString);
        char[] chars = hexString.toCharArray();
        for (char c : chars) {
            short b = (short) c;
            int index = ArrayUtils.indexOf(plainTextDictionary, b);
            short cipher = ciphertextDictionary[index];
            buffer.append((char) cipher);
        }
        return buffer.toString();
    }

    /**
     * 根据密文解密
     */
    public static final String decryptCipherTextToString(byte[] bytes) {
        StringBuffer buffer = new StringBuffer();
        String hexString = HexStringUtils.parseByte2HexStr(bytes);
        System.out.println(hexString);
        char[] chars = hexString.toCharArray();
        for (char c : chars) {
            int index = ArrayUtils.indexOf(ciphertextDictionary, (short) c);
            buffer.append((char) plainTextDictionary[index]);
        }
        return buffer.toString();
    }

    public static void main(String[] args)throws Exception {
        String a = "{\"362108\":{\"L1_LF_1\":37.5,\"L1_LF_2\":\"1,2\"}}";
        String b = "8iWW]]]t]W]{]!]\"WW]e8iWW;(]{)?;(;t)?]WWW]eWW]{W(]WWWW(WW;(]{)?;(;t)?]{WW]e]]]8W\\])8G8G";
        byte[] bytes = JSONObject.parseObject(a).toJSONString().getBytes("UTF-8");
        System.out.println(encryptCipherTextToString(bytes));
        String s = decryptCipherTextToString(b.getBytes());
        System.out.println(s);
        System.out.println(new String(s.getBytes(),Charset.forName("GBK")));
    }
}
