# 该文件配置会继承bootstrap.xml，只需要配置数据库等差异配置
spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/aj_report?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false
    username: root
    password: 123456
  #数据源连接池配置
  druid:
    initial-size: 10 # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    min-idle: 10 # 最小连接池数量
    maxActive: 200 # 最大连接池数量
    maxWait: 3000 # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置
    timeBetweenEvictionRunsMillis: 60000 # 关闭空闲连接的检测时间间隔.Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
    minEvictableIdleTimeMillis: 300000 # 连接的最小生存时间.连接保持空闲而不被驱逐的最小时间
    testWhileIdle: true # 申请连接时检测空闲时间，根据空闲时间再检测连接是否有效.建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRun
    poolPreparedStatements: true # 开启PSCache
    maxPoolPreparedStatementPerConnectionSize: 20 #设置PSCache值
    connectionErrorRetryAttempts: 3 # 连接出错后再尝试连接三次
    breakAfterAcquireFailure: true # 数据库服务宕机自动重连机制
    timeBetweenConnectErrorMillis: 300000 # 连接出错后重试时间间隔
  redis:
    database: 0
    host: 10.10.254.51
    port: 6379
    password: 123456
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
#HTTP-client连接池配置
http:
  client:
    pool:
      max-maxTotalConnect: 1000 #连接池的最大连接数
      max-maxConnectPerRoute: 200 #同路由的并发数
      connectTimeout: 20000 #客户端和服务器建立连接超时，默认2s
      readTimeout: 30000 #指客户端从服务器读取数据包的间隔超时时间,不是总读取时间，默认30s
      charset: UTF-8 #字符编码
      retryTimes: 2 #重试次数,默认2次
      connectionRequestTimout: 200 #从连接池获取连接的超时时间,不宜过长,单位ms
      keepAliveTime: 60 #针对不同的地址,特别设置不同的长连接保持时间,单位 s
